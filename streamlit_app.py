from datetime import datetime
import streamlit as st
from google_sheets import authenticate_google_sheets
from caching import *
from data_processing_main_req import *
from facebook_api import *

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
st.set_page_config(page_title="–†–∞—Å—Å—á–µ—Ç –±–∞–µ—Ä–æ–≤", page_icon="üìà")

# –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞ —Ñ—ñ–ª—å—Ç—Ä–∏
st.title("–†–∞—Å—Å—á–µ—Ç –±–∞–µ—Ä–æ–≤")
st.header('–§–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–∞–º')

# –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–µ–∫—Ä–µ—Ç—ñ–≤ –∑ Streamlit
api_key = st.secrets["api_key"]
google_sheets_creds = st.secrets["gcp_service_account"]

# –í–∏–±—ñ—Ä –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –ø–æ–∫—É–ø—Ü—ñ–≤
buyers_list = ['ss', 'il', 'dm', 'mb']
b = st.selectbox("–í–∏–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∑–∞–∫–∞–∑–∞", buyers_list)

# –§—ñ–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–∞–º
start_date = st.date_input('–ù–∞—á–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞', value=datetime(2024, 9, 1))
end_date = st.date_input('–ö–æ–Ω–µ—á–Ω–∞—è –¥–∞—Ç–∞', value=datetime(2024, 9, 3))

# –í–∞–ª—ñ–¥–∞—Ü—ñ—è –¥–∞—Ç
if end_date < start_date:
    st.error('–ö–æ–Ω–µ—á–Ω–∞—è –¥–∞—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–Ω—å—à–µ –Ω–∞—á–∞–ª—å–Ω–æ–π –¥–∞—Ç—ã.')

# –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—è –¥–∞—Ç —É —Å—Ç—Ä–æ–∫–∏
start_date_str = start_date.strftime('%Y-%m-%d')
end_date_str = end_date.strftime('%Y-%m-%d')

# –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ç–æ–∫–µ–Ω—ñ–≤ –∑ Google Sheets
spreadsheet_id_tokens = '1Q8eFscYd9dsl6QTzLiRQqKXMg3HFuZgwjd9kg0fOMdQ'
sheet_name_tokens = '–õ–∏—Å—Ç1'

df_tokens = fetch_tokens_data(spreadsheet_id_tokens, sheet_name_tokens, dict(google_sheets_creds), b)
if st.button("Fetch Tokens Data"):
    st.dataframe(df_tokens)

# –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ –æ—Ñ–µ—Ä—ñ–≤ Google Sheets
spreadsheet_id_offers = '15GvP6wElztDSQKqk5kxnB37dKxKi3nTyEsTbBF1vqW4'

combined_df = fetch_offers_data(spreadsheet_id_offers, dict(google_sheets_creds))
if st.button("Fetch Spravochnik Data"):
    st.dataframe(combined_df)

sheet_name_payment = '–í—ã–ø–ª–∞—Ç–∞ (new)'

df_payment, df_appruv_range = fetch_payment_data(spreadsheet_id_offers, sheet_name_payment, dict(google_sheets_creds))
if st.button("Fetch Payment Data"):
    st.dataframe(df_payment)
    st.dataframe(df_appruv_range)



if st.button("Fetch Facebook Data"):
    df_grouped = cached_fetch_facebook_data(df_tokens, start_date_str, end_date_str)
    if df_grouped is not None:
        st.dataframe(df_grouped)
    else:
        st.warning("–ù–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —Ç–æ–∫–µ–Ω—ñ–≤ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ Facebook.")



# –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ CRM
if st.button("Fetch Orders"):
    df_orders = fetch_orders_data(api_key, start_date_str, end_date_str, b)
    print(df_orders)
    processed_orders = process_orders_data(df_orders)
    st.write(processed_orders)